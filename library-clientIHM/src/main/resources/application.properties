server.port=9001

#datasource
#spring.datasource.url=jdbc:postgresql://localhost:5433/auth
#spring.datasource.username=postgres
#spring.datasource.password=abcde1234
#spring.datasource.initialization-mode=always
#spring.jpa.show-sql=true


#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.format_sql=true


spring.main.allow-bean-definition-overriding=true

# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
security.oauth2.client.client-id= 600075143725-0fo6iu983ueh6fjor7pjhk1vpls00tap.apps.googleusercontent.com
security.oauth2.client.client-secret= R_1Xc5uX7EDEdOIfAzYlfmH0
security.oauth2.client.access-token-uri = https://www.googleapis.com/oauth2/v3/token
security.oauth2.client.user-authorization-uri = https://accounts.google.com/o/oauth2/auth
security.oauth2.client.token-name = oauth_token
security.oauth2.client.authentication-scheme = query
security.oauth2.client.client-authentication-scheme = form
security.oauth2.client.scope = profile email


# SECURITY OAUTH2 RESOURCES (ResourceServerProperties)
security.oauth2.resource.prefer-token-info = false
security.oauth2.resource.user-info-uri=  https://www.googleapis.com/userinfo/v2/me

